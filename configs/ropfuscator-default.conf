#
# Mandatory section. These settings are applied to every function processed by ropfuscator.
#
[general]
# Toggle obfuscation globally.
# If this is set to false, ropfuscator is disabled and other configs are ignored.
# Default: true
obfuscation_enabled = true

# Library path where the gadgets are extracted from. 
# This setting will override the system's libc, using a custom library instead.
# Default: system's 32bit libc
# custom_library_path = ""

# If set to true, ropfuscator will look for gadgets in the code segment
# instead of the code section (which will find more gadgets since code segment is wider)
# Default: true
search_segment_for_gadget = true

# If set to true, symbols which have multiple versions arenot used. 
# If set to false, only one version of those symbols is used. 
# e.g: angr will not work correctly if this is set to false
# Default: false
avoid_multiversion_symbol = false

# If set to true, print a number of instruction obfuscated for each opcode.
print_instr_stat = false

# ================================
# Functions' obfuscation section
#

# These settings are applied to every function processed by ropfuscator.
# Note that the special "default" section does not have a "name" field.
# This section is mandatory.
[functions.default]
    # Toggle obfuscation for function
    # Default: true
    obfuscation_enabled = true

    # ================================
    # Opaque predicates settings
    #

    # Toggles the usage of opaque predicates
    # Default: false
    opaque_predicates_enabled = false

    # when true, immediate operand is obfuscated with opaque predicate.
    # ignored when opaque predicate is turned off.
    # Default: true
    obfuscate_immediate_operand = true

    # when true, branch target address is obfuscated with opaque predicate.
    # ignored when opaque predicate is turned off.
    # Default: true
    obfuscate_branch_target = true

    # Available algorithms are:
    # - MOV: dummy implementation
    # - MULTCOMP: repeat 32 times the multiplication of prime numbers to then compare the result, generating 1 bit
    # Default: MOV
    opaque_predicates_algorithm = "MOV"

    # ================================
    # Branch divergence settings
    #

    # Toggles the usage of branch divergence algorithms.
    # Default: false
    branch_divergence_enabled = false

    # Max branches depth
    # Default: 32
    branch_divergence_max_branches = 32

    # Available algorithms are:
    # - ADDREG: use the sum of the available registers to generate a random value (e.g EAX + EBX + ECX + EDX + ESI + EDI)
    # - RDTSC: use RDTSC as random value
    # - NEGATIVE_STACK: use the value of [ESP-**] as random value
    # Default: ADDREG
    branch_divergence_algorithm = "ADDREG"

# Example section.
# The section can have any name, e.g. for explanatory reasons.
[functions.example-label]
    # The function names' are specified through regular expressions.
    name = "main"

    branch_divergence_enabled = false

    opaque_predicates_enabled = true
    opaque_predicates_algorithm = "MOV"